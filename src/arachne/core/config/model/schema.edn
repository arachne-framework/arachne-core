;; Model for Configurations

;; Note that this model is similar to what is *generated* by the Chimera module.

;; Chimera can also *read* models of this format, meaning that data modesl can
;; be round-tripped between Arachne Schema and Chimera Models.

;; When the Chimera module is loaded, it creates a Chimera data model from all
;; the schema present in the Arachne Config, so that Chimera persistence ops &
;; tools will work on the config. However, they are not required.

[
  [

   ;; Classes
   {:db/id          #arachne/tempid[:db.part/db]
    :db/ident       :arachne.type/supertypes
    :db/valueType   :db.type/ref
    :db/cardinality :db.cardinality/many
    :db/doc         "The supertypes of a type"
    :db.install/_attribute :db.part/db}

   ;; Meta-attributes
   {:db/id          #arachne/tempid[:db.part/db]
    :db/ident       :arachne.attribute/domain
    :db/valueType   :db.type/ref
    :db/cardinality :db.cardinality/one
    :db/doc         "Defines that entities having this attribute are instances of the referenced type."
    :db.install/_attribute :db.part/db}
   {:db/id          #arachne/tempid[:db.part/db]
    :db/ident       :arachne.attribute/range
    :db/valueType   :db.type/ref
    :db/cardinality :db.cardinality/one
    :db/doc         "Defines that entities that are the object of this attribute are instances of the referenced type."
    :db.install/_attribute :db.part/db}
   {:db/id          #arachne/tempid[:db.part/db]
    :db/ident       :arachne.attribute/min-cardinality
    :db/valueType   :db.type/long
    :db/cardinality :db.cardinality/one
    :db/doc         "The minimum cardinality of an attribute"
    :db.install/_attribute :db.part/db}
   {:db/id          #arachne/tempid[:db.part/db]
    :db/ident       :arachne.attribute/max-cardinality
    :db/valueType   :db.type/long
    :db/cardinality :db.cardinality/one
    :db/doc         "The maximum cardinality of an attribute"
    :db.install/_attribute :db.part/db}

   ]

 ;; Meta
 [
  {:db/id          #arachne/tempid[:db.part/user]
   :db/ident       :arachne/Type
   :db/doc         "The type of Types"}
  {:db/id          #arachne/tempid[:db.part/user]
   :db/ident       :arachne/Attribute
   :db/doc         "The type of Attributes"}
  {:db/id          #arachne/tempid[:db.part/user]
   :db/ident       :arachne/Entity
   :db/doc         "The root type, the implicit supertype of all other configuration types"}

  {:db/id  #arachne/tempid[:db.part/db]
   :db/ident :arachne.class/superclasses
   :arachne.attribute/domain {:db/ident :arachne/Type}
   :arachne.attribute/range {:db/ident :arachne/Type}}

  {:db/id  #arachne/tempid[:db.part/db]
   :db/ident :arachne.attribute/domain
   :arachne.attribute/domain {:db/ident :arachne/Attribute}
   :arachne.attribute/range {:db/ident :arachne/Type}}

  {:db/id  #arachne/tempid[:db.part/db]
   :db/ident :arachne.attribute/range
   :arachne.attribute/domain {:db/ident :arachne/Attribute}
   :arachne.attribute/range {:db/ident :arachne/Type}}

  {:db/id  #arachne/tempid[:db.part/db]
   :db/ident :arachne.attribute/min-cardinality
   :arachne.attribute/domain {:db/ident :arachne/Attribute}}

  {:db/id  #arachne/tempid[:db.part/db]
   :db/ident :arachne.attribute/max-cardinality
   :arachne.attribute/domain {:db/ident :arachne/Attribute}}

  ]

]
