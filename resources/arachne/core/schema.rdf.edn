[

 #arachne/class [:clojure/Var [:owl/Thing]]  ;; Shouldn't need to be explicit, but helps the reasoner
 #arachne/class [:clojure/Namespace [:owl/Thing]]

 {:rdf/about :clojure/Var
  :owl/disjointWith :clojure/Namespace}

 #arachne/class [:arachne/Provenance []
                 {:arachne.provenance/function [:one :required :clojure/Var]
                  :arachne.provenance/stack-frame [:one :optional :arachne/StackFrame]
                  :arachne.provenance/parent [:one :optional :arachne/Provenance]}]

 #arachne/class [:arachne/StackFrame []
                 {:arachne.stack-frame/class [:one :optional :xsd/string]
                  :arachne.stack-frame/source-file [:one :optional :xsd/string]
                  :arachne.stack-frame/source-line [:one :optional :xsd/integer]}]

 {:rdf/about :arachne.descriptor/tx
  :rdfs/domain :rdf/Statement
  :rdfs/range :arachne.descriptor/Tx}

 #arachne/class [:arachne.descriptor/Tx []
                 {:arachne.descriptor.tx/index [:one :required :xsd/integer]
                  :arachne.descriptor.tx/provenance [:one :optional :arachne/Provenance]}]

 #arachne/class [:arachne/Module []
                 {:arachne.module/dependencies [:many :optional :arachne/Module]
                  :arachne.module/configure [:many :optional :clojure/Var]}]

 {:rdf/about :arachne.module/include
  :rdfs/domain :arachne/Module
  :rdfs/range {:rdf/type :owl/Class
               :owl/unionOf [:xsd/string :clojure/Var :clojure/Namespace]}}

 #arachne/class [:arachne.descriptor/Validator []
                 {:arachne.descriptor.validator/fn [:one :required :clojure/Var]}]

 #arachne/class [:arachne/Component []
                 {:arachne.component/dependencies [:many :optional :arachne.component/Dependency]
                  :arachne.component/constructor [:one :required :clojure/Var]}]

 #arachne/class [:arachne.component/Dependency []
                 {:arachne.component.dependency/entity [:one :required :arachne/Component]
                  :arachne.component.dependency/key [:one :optional :xsd/string]}]

 #arachne/class [:arachne/Runtime []
                 {:arachne.runtime/components [:many :required :arachne/Component]}]

 ]
